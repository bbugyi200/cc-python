name: CI Pipeline
on:  # yamllint disable-line rule:truthy
  push:
    branches: [master]
  pull_request:
env:
  USE_DOCKER: true
jobs:
  test:
    runs-on: ["{% raw %}${{ matrix.os }}{% endraw %}"]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install Dependencies
        run: |
          python -m pip install -U pip docker-compose

      - name: Unit tests
        run: |
          make test

      - name: Publish coverage to codecov.io.
        if: ${% raw %}{{ !env.ACT }}{% endraw %}
        run: |
          python -m pip install -U coverage
          bash <(curl -s https://codecov.io/bash) -cF python
  lint:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install Dependencies
        run: |
          python -m pip install -U pip docker-compose

      - name: Run linters.
        run: |
          make lint

  publish:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install pypa/build
        run: |
          python -m pip install --user build

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Build wheels
        run: |
          python setup.py sdist

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${% raw %}{{ secrets.TEST_PYPI_API_TOKEN }}{% endraw %}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish distribution to PyPI
        if: github.repository == 'bbugyi200/{{ cookiecutter.git_repo_name }}' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${% raw %}{{ secrets.PYPI_API_TOKEN }}{% endraw %}
